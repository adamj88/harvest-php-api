<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JoliCode\Harvest\Api\Endpoint;

class PatchUserByUserId extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7HttplugEndpoint
{
    protected $UserId;

    /**
     * Updates the specific user by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Returns a user object and a 200 OK response code if the call succeeded.
     *
     * @param string $userId
     * @param array  $queryParameters {
     *
     *     @var string $first_name The first name of the user. Can’t be updated if the user is inactive.
     *     @var string $last_name The last name of the user. Can’t be updated if the user is inactive.
     *     @var string $email The email address of the user. Can’t be updated if the user is inactive.
     *     @var string $telephone the telephone number for the user
     *     @var string $timezone The user’s timezone. Defaults to the company’s timezone. See a list of supported time zones.
     *     @var string $has_access_to_all_future_projects whether the user should be automatically added to future projects
     *     @var string $is_contractor whether the user is a contractor or an employee
     *     @var string $is_admin whether the user has admin permissions
     *     @var string $is_project_manager whether the user has project manager permissions
     *     @var string $can_see_rates Whether the user can see billable rates on projects. Only applicable to project managers.
     *     @var string $can_create_projects Whether the user can create projects. Only applicable to project managers.
     *     @var string $can_create_invoices Whether the user can create invoices. Only applicable to project managers.
     *     @var string $is_active whether the user is active or archived
     *     @var string $weekly_capacity the number of hours per week this person is available to work in seconds
     *     @var string $default_hourly_rate the billable rate to use for this user when they are added to a project
     *     @var string $cost_rate the cost rate to use for this user when calculating a project’s costs vs billable amount
     *     @var string $roles The role names assigned to this person.
     * }
     */
    public function __construct(string $userId, array $queryParameters = [])
    {
        $this->userId = $userId;
        $this->queryParameters = $queryParameters;
    }

    use \Jane\OpenApiRuntime\Client\Psr7HttplugEndpointTrait;

    public function getMethod(): string
    {
        return 'PATCH';
    }

    public function getUri(): string
    {
        return str_replace(['{UserId}'], [$this->UserId], '/users/{UserId}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, \Http\Message\StreamFactory $streamFactory = null): array
    {
        return [[], null];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['first_name', 'last_name', 'email', 'telephone', 'timezone', 'has_access_to_all_future_projects', 'is_contractor', 'is_admin', 'is_project_manager', 'can_see_rates', 'can_create_projects', 'can_create_invoices', 'is_active', 'weekly_capacity', 'default_hourly_rate', 'cost_rate', 'roles']);
        $optionsResolver->setRequired([]);
        $optionsResolver->setDefaults([]);
        $optionsResolver->setAllowedTypes('first_name', ['string']);
        $optionsResolver->setAllowedTypes('last_name', ['string']);
        $optionsResolver->setAllowedTypes('email', ['string']);
        $optionsResolver->setAllowedTypes('telephone', ['string']);
        $optionsResolver->setAllowedTypes('timezone', ['string']);
        $optionsResolver->setAllowedTypes('has_access_to_all_future_projects', ['string']);
        $optionsResolver->setAllowedTypes('is_contractor', ['string']);
        $optionsResolver->setAllowedTypes('is_admin', ['string']);
        $optionsResolver->setAllowedTypes('is_project_manager', ['string']);
        $optionsResolver->setAllowedTypes('can_see_rates', ['string']);
        $optionsResolver->setAllowedTypes('can_create_projects', ['string']);
        $optionsResolver->setAllowedTypes('can_create_invoices', ['string']);
        $optionsResolver->setAllowedTypes('is_active', ['string']);
        $optionsResolver->setAllowedTypes('weekly_capacity', ['string']);
        $optionsResolver->setAllowedTypes('default_hourly_rate', ['string']);
        $optionsResolver->setAllowedTypes('cost_rate', ['string']);
        $optionsResolver->setAllowedTypes('roles', ['string']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     *
     * @return null|\JoliCode\Harvest\Api\Model\User|\JoliCode\Harvest\Api\Model\Error
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer)
    {
        if (200 === $status) {
            return $serializer->deserialize($body, 'JoliCode\\Harvest\\Api\\Model\\User', 'json');
        }

        return $serializer->deserialize($body, 'JoliCode\\Harvest\\Api\\Model\\Error', 'json');
    }
}
