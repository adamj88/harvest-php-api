<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace JoliCode\Harvest\Api\Endpoint;

class PatchInvoiceByInvoiceId extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7HttplugEndpoint
{
    protected $InvoiceId;

    /**
     * Updates the specific invoice by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Returns an invoice object and a 200 OK response code if the call succeeded.
     *
     * @param string $invoiceId
     * @param array  $queryParameters {
     *
     *     @var string $client_id the ID of the client this invoice belongs to
     *     @var string $retainer_id the ID of the retainer associated with this invoice
     *     @var string $estimate_id the ID of the estimate associated with this invoice
     *     @var string $number if no value is set, the number will be automatically generated
     *     @var string $purchase_order the purchase order number
     *     @var string $tax This percentage is applied to the subtotal, including line items and discounts. Example: use 10.0 for 10.0%.
     *     @var string $tax2 This percentage is applied to the subtotal, including line items and discounts. Example: use 10.0 for 10.0%.
     *     @var string $discount This percentage is subtracted from the subtotal. Example: use 10.0 for 10.0%.
     *     @var string $subject the invoice subject
     *     @var string $notes any additional notes to include on the invoice
     *     @var string $currency The currency used by the invoice. If not provided, the clientâ€™s currency will be used. See a list of supported currencies
     *     @var string $issue_date date the invoice was issued
     *     @var string $due_date date the invoice is due
     *     @var string $payment_term The timeframe in which the invoice should be paid. Options: upon receipt, net 15, net 30, net 45, or net 60.
     *     @var string $line_items Array of line item parameters
     * }
     */
    public function __construct(string $invoiceId, array $queryParameters = [])
    {
        $this->invoiceId = $invoiceId;
        $this->queryParameters = $queryParameters;
    }

    use \Jane\OpenApiRuntime\Client\Psr7HttplugEndpointTrait;

    public function getMethod(): string
    {
        return 'PATCH';
    }

    public function getUri(): string
    {
        return str_replace(['{InvoiceId}'], [$this->InvoiceId], '/invoices/{InvoiceId}');
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, \Http\Message\StreamFactory $streamFactory = null): array
    {
        return [[], null];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['client_id', 'retainer_id', 'estimate_id', 'number', 'purchase_order', 'tax', 'tax2', 'discount', 'subject', 'notes', 'currency', 'issue_date', 'due_date', 'payment_term', 'line_items']);
        $optionsResolver->setRequired([]);
        $optionsResolver->setDefaults([]);
        $optionsResolver->setAllowedTypes('client_id', ['string']);
        $optionsResolver->setAllowedTypes('retainer_id', ['string']);
        $optionsResolver->setAllowedTypes('estimate_id', ['string']);
        $optionsResolver->setAllowedTypes('number', ['string']);
        $optionsResolver->setAllowedTypes('purchase_order', ['string']);
        $optionsResolver->setAllowedTypes('tax', ['string']);
        $optionsResolver->setAllowedTypes('tax2', ['string']);
        $optionsResolver->setAllowedTypes('discount', ['string']);
        $optionsResolver->setAllowedTypes('subject', ['string']);
        $optionsResolver->setAllowedTypes('notes', ['string']);
        $optionsResolver->setAllowedTypes('currency', ['string']);
        $optionsResolver->setAllowedTypes('issue_date', ['string']);
        $optionsResolver->setAllowedTypes('due_date', ['string']);
        $optionsResolver->setAllowedTypes('payment_term', ['string']);
        $optionsResolver->setAllowedTypes('line_items', ['string']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     *
     * @return null|\JoliCode\Harvest\Api\Model\Invoice|\JoliCode\Harvest\Api\Model\Error
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer)
    {
        if (200 === $status) {
            return $serializer->deserialize($body, 'JoliCode\\Harvest\\Api\\Model\\Invoice', 'json');
        }

        return $serializer->deserialize($body, 'JoliCode\\Harvest\\Api\\Model\\Error', 'json');
    }
}
